# https://github.com/0xElkot/wp-json-extractor/blob/main/wp-json.py

import argparse
from security import safe_requests

parser = argparse.ArgumentParser(description="A tool to scrape data from wp-json path of a WordPress site")
parser.add_argument("-u", "--url", help="domain")
parser.add_argument("-f", "--file", help="domains")
args = parser.parse_args()

def scrape_data(url):
    url = url.rstrip("/") + "/wp-json"
    response = safe_requests.get(url).json()
    results = []
    endpoints = set()
    href_urls = set()
    def traverse(data, path):
        if isinstance(data, dict):
            for key, value in data.items():
                if key == "href":
                    href_urls.add(value)
                else:
                    traverse(value, path + "/" + key)
        elif isinstance(data, list):
            for element in data:
                traverse(element, path)
        elif path:
            endpoints.add(path)
    traverse(response, "")
    result = {"endpoints": endpoints, "href_urls": href_urls}
    results.append(result)
    return results

def sort_results(results):
    for result in results:
        result["endpoints"] = sorted(list(result["endpoints"]))
        result["href_urls"] = sorted(list(result["href_urls"]))
    return results

def write_results(results):
    for i, result in enumerate(results):
        endpoints_file = f"endpoints_{i}.txt"
        href_urls_file = f"href_urls_{i}.txt"
        with open(endpoints_file, "w") as ef, open(href_urls_file, "w") as hf:
            for name in result["endpoints"]:
                ef.write(name + "\n")
            for name in result["href_urls"]:
                hf.write(name + "\n")

if args.url:
    data = scrape_data(args.url)
    sorted_data = sort_results(data)
    write_results(sorted_data)
elif args.file:
    with open(args.file, "r") as f:
        data = []
        for line in f:
            url = line.strip()
            data.extend(scrape_data(url))
        sorted_data = sort_results(data)
        write_results(sorted_data)
